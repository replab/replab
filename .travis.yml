# We pretend to be Java because we need GNU Octave which is not
# available (as of January 2016)
language: java

dist: bionic

###############################################################################
env:
  - COVERING=false;
  - COVERING=true;

###############################################################################
cache:
  # Downloading octave takes a while, so let's cache apt
  apt: true
  directories:
    # Cache octave packages
    - $HOME/octave
    # Cache other packages
    - $HOME/external_cache

###############################################################################
# Command to install dependencies
before_install:
  - sudo add-apt-repository universe
  - sudo apt update
  - sudo apt install octave liboctave-dev octave-optim octave-symbolic
  - git submodule update --init

###############################################################################
install:
  ADDPATH_COMMAND="replab_init('verbose', 2);"

###############################################################################
before_script:
  - |
    if [ $COVERING == true ]; then
      TEST_COMMAND="exit(~replab_runtests(1,1));";
    else
      TEST_COMMAND="exit(~replab_runtests(0,1));";
    fi
  - echo "TEST_COMMAND| $TEST_COMMAND";
  # Double-check we are still in the right directory
  - pwd
  # Check what octave packages we have installed
  - octave -q --eval "ver"
  # ---------------------------------------------------------------------------
  # Remove any cached results files from previous build, if present
  - rm -f testresults.xml;
  # ---------------------------------------------------------------------------

###############################################################################
script:
  - octave -q --eval "$ADDPATH_COMMAND $TEST_COMMAND";

###############################################################################
after_success:
  # Check where we ended up and what's going on where we are
  - pwd
  - ls -alh
  - |
    if [ $COVERING == true ]; then
      bash <(curl -s https://codecov.io/bash);
    fi
