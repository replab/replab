function test_suite = enforceQuaternionEncodingTest()
    disp(['Setting up tests in ', mfilename()]);
    try
        test_functions = localfunctions();
    catch
    end
    initTestSuite;
end

function testHasCorrectForm
    Q = replab.QuaternionGroup;
    S3 = replab.S(3);
    W = S3.wreathProduct(Q);
    rep = W.primitiveRep(Q.naturalRep);
    basis = [0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 1 0 0 0 0 0 0 0 0 0 -1 0 1 1 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 -1
             0 0 -1 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0
             0 0 0 0 0 0 1 1 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 -1 1 0 -1 0
             0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 -1 0 0 0 0 0 0 -1 -1 0 0 0 0 0 -1 -1 0 0 1 0 -1 0 0 0 0 0 0 0
             0 0 0 0 1 0 0 0 -1 0 0 0 -1 0 0 0 0 0 -1 -1 0 0 1 0 1 0 0 0 0 0 0 0
             0 0 0 -1 0 -1 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0
             -1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 -1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 -1 -1 0 0 0 1 0 0 0 -1 0 0
             0 0 0 -1 0 1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 1
             0 0 0 0 0 0 0 0 -1 0 0 -1 1 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0
             0 -1 0 0 0 0 0 0 0 -1 -1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0
             1 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 -1 -1 0 -1 0
             0 1 1 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 1 0 0 0 -1 0 0
             1 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0
             0 0 0 -1 0 -1 0 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 -1
             0 0 0 0 1 0 0 0 -1 0 0 0 -1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0
             -1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 0 -1 -1 0 1 0
             0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 1 0 0 0 1 0 0
             0 0 0 0 0 0 0 0 -1 0 0 -1 1 0 0 0 0 0 1 -1 0 0 1 0 -1 0 0 0 0 0 0 0
             0 0 0 -1 0 1 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 1 0 0 0 1 0 0 -1 0 0 0 0 0 0 -1 1 0 0 1 0 1 0 0 0 0 0 0 0
             0 1 -1 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0
             3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 -1 0 0 0 0 0 0 0 1 0 1 -1 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 1
             -1 0 0 0 0 0 0 -1 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 0 0 0 0 0 -1 -1 0 -1 0
             0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 1 0 0 1 -1 0 0 0 0 0 1 1 0 0 1 0 -1 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 1 1 0 0 0 0 0 0 -1 0 0 -1 0 0 0 0 0 0 0 0 0 1 -1 0 -1 0
             0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 -1 0 -1 0 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1
             0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             -1 0 0 0 0 0 0 -1 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0
             1 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 -1 1 0 1 0
             0 0 1 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 -1 0 0 0 1 0 0
             0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 -1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 -1
             0 1 -1 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 -1 -1 0 0 0 -1 0 0 0 1 0 0
             0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 1 0 0 0 0 0 0 0 0 0 -1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2
             0 0 0 0 -1 0 0 0 -1 0 0 1 0 0 0 0 0 0 -1 1 0 0 1 0 -1 0 0 0 0 0 0 0
             0 0 0 0 0 -1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0
             0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 -1 -1 0 0 -1 0 -1 0 0 0 0 0 0 0
             0 0 -1 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 -1 0 0 0 -1 0 0
             -1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 0 1 1 0 -1 0
             0 0 0 0 -1 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0
             0 0 0 1 0 0 0 0 0 0 0 0 0 -1 0 1 -1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 -1
             0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 -1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 -1 -1 0 0 0 1 0 0 0 1 0 0
             0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             -1 0 0 0 0 0 0 -1 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 1 -1 0 1 0
             0 0 0 -1 0 1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 -1
             0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 0 0 1 1 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0
             0 -1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0
             0 0 0 0 -1 0 0 0 1 0 0 0 1 0 0 0 0 0 1 -1 0 0 1 0 1 0 0 0 0 0 0 0
             0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
    sub = rep.subRep(basis, 'isIrreducible', true, 'frobeniusSchurIndicator', -2);
    irreps = sub.split;
    assert(length(irreps) == 1);
    res = irreps{1};
    X = res.sample;
    X1 = replab.domain.QuaternionTypeMatrices(32, 32, 'group').project(X);
    assert(norm(X - X1) < replab.globals.doubleEigTol);
end
