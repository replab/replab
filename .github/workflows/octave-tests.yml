# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: '*'
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# We have some environment variables
env:
  ADDPATH_COMMAND: "replab_init('verbose', 2);"
  COVERING: false


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: Run tests on Octave
    # The type of runner that the job will run on
    runs-on: focal
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install octave liboctave-dev octave-optim octave-symbolic openjdk-11-jre
      - name: before_script
        run: |
          if [ $COVERING == true ]; then
            TEST_COMMAND="exit(~replab_runtests(1,1));";
          else
            TEST_COMMAND="exit(~replab_runtests(0,1));";
          fi
          echo "TEST_COMMAND| $TEST_COMMAND";
          # Double-check we are still in the right directory
          pwd
          # Check what octave packages we have installed
          octave -q --eval "ver"
          # Check that octave can access java
          octave --eval "b = javaMethod('valueOf', 'java.math.BigInteger', 2)"
          # ---------------------------------------------------------------------------
          # Remove any cached results files from previous build, if present
          rm -f testresults.xml;
          # ---------------------------------------------------------------------------
      - name: Run tests
        run: |
          octave -q --eval "$ADDPATH_COMMAND $TEST_COMMAND";
          # Check where we ended up and what's going on where we are
          pwd
          ls -alh
          if [ $COVERING == true ]; then
            bash <(curl -s https://codecov.io/bash);
          fi

