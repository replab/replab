classdef FiniteDisjointUnion < replab.Domain
% Describes a disjoint union of finite sets of elements

    properties (SetAccess = protected)
        type % (`.FiniteSet`): Type of the contained sets; satisfies ``type.type == type``
    end

    methods

        function s = size(self)
        % Returns the number of disjoint sets forming the union
        %
        % Returns:
        %   vpi: Set cardinality
            error('Abstract');
        end

        function E = elements(self)
        % Returns an indexed family corresponding to this set
        %
        % Returns:
        %   `.IndexedFamily`: An enumeration of the set elements
            E = self.cached('elements', @() self.computeElements);
        end

        function E = computeElements(self)
        % See `.elements`
            error('Abstract');
        end

        function T = transversal(self)
        % Returns the set of representatives for all sets in this union
        %
        % Those representatives are ordered; and we have ``self.transversal.at(i) == self.elements.at(i).representative``.
        %
        % Returns:
        %   `.IndexedFamily`: Indexed family of representatives
            error('Abstract');
        end

        function [S index] = findSet(self, el)
        % Returns the set in which the given element is contained
        %
        % If the element ``el`` in contained in a set ``S``, it returns ``S`` and the index of
        % ``S`` in `.elements`.
        %
        % If not, it returns ``S = []`` and ``index = 0``.
        %
        % Args:
        %   el (element of `.type): Element to search for
        %
        % Returns
        % -------
        %   S:
        %     `+replab.FiniteSet` or ``[]``: Finite set which contains ``el`` if it exists
        %   index:
        %     vpi: Index of the finite set in `.elements` if found, or ``vpi(0)`` otherwise
            error('Abstract');
        end

        function [r ok] = representative(self, el)
        % Returns the representative of the set in which the given element is contained
        %
        % If the element ``el`` is contained in a set ``S`` of this disjoint union of sets,
        % it returns ``r = S.representative`` and ``ok = true``.
        %
        % If the element ``el`` is not contained in a set of this disjoint union of sets,
        % it returns ``r = []`` and ``ok = false``.
        %
        % Args:
        %   el (element of `.type`): Element to search for
        %
        % Returns
        % -------
        %   r:
        %     element of `.type`: Set representative or ``[]``
        %   ok:
        %     logical: Whether the element could be found
            error('Abstract');
        end

    end

end
