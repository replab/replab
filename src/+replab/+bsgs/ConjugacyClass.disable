classdef ConjugacyClass < replab.Str
% Describes a conjugacy class of a finite group
%
% A conjugacy class containing $a \in G$ is the set $\{g a g^{-1} : g \in G \}$.
%
% The centralizer of $a$ in $G$ is the subgroup $C_{G}(a) = \{ g a g^{-1} == a : g \in G \}$.
%
% Thus, the left cosets $G/C_{G}(a) = \{ g C_{G}(a) : g \in G \}$ are in one to one correspondence with
% the elements of the conjugacy class.

    properties (SetAccess = protected)
        group % (`+replab.FiniteGroup`): Group containing this conjugacy class
        representative % (group element): Representative element of the conjugacy class
        representativeCentralizer % (`+replab.FiniteGroup`): Centralizer of `.representative` in `.group`
        size % (vpi): Size of the conjugacy class
    end

    methods (Access = protected)

        function self = ConjugacyClass(group, representative, representativeCentralizer)
            self.group = group;
            self.representative = representative;
            self.morphism = morphism;
            self.elementImages = elementImages;
            self.size = group.order / representativeCentralizer.order;
        end

    end

    methods

        function l = contains(self, g)

        end

        function e = elements(self)
        % Returns all the elements of this conjugacy class
        %
        % Returns:
        %   cell(1,\*) of `.group` elements: Conjugacy class elements
            rightCosets = self.representativeCentralizer \ self.group;
            % compute right cosets first because it's faster, but then obtain left transversal
            % we don't care about minimizing transversal representatives as any representative gives the same result
            leftTransversal = cellfun(@(g) self.group.inverse(g), rightCosets.transversal, 'uniform', 0);
            e = cellfun(@(t) self.group.leftConjugate(self.group.inverse(t), self.representative), T, 'uniform', 0);
        end

    end


    methods (Static)

        function c = computeAll(group)
            classes = replab.nfg.conjugacyClassesByOrbits(group);
            c = cellfun(@(cl) replab.ConjugacyClass(group, cl), classes, 'uniform', 0);
        end

    end

end
